{
  "name": "appfog-env",
  "version": "0.0.1",
  "description": "Parses service bindings and configuration information for Node.js apps on AppFog",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:tsantef/appfog-env.git"
  },
  "keywords": [
    "AppFog",
    "Environment",
    "CoffeeScript"
  ],
  "author": {
    "name": "Tim Santeford"
  },
  "license": "MIT",
  "dependencies": {
    "coffee-script": "~1.6.3",
    "underscore": "~1.4.4"
  },
  "readme": "# AppFog Env\n\nThis module provides easy access to the AppFog services and application environment information from within a running app instance.\n\n## Installation\n\n    npm install appfog-env\n\n## Basic Usage\n\n    var appfog = require('appfog-env');\n\n    console.log(appfog);\n\n## Properties\n\n### .appName [String]\n\nApplication name.\n\n### .port [String]\n\nPort number assigned to the app instance.\n\n#### Usage Example\n\n    var server = http.createServer(app).listen(appfog.port || 3000);\n\n### .instanceIndex [Integer]\n\nZero-based instance index for the current instance. This might be useful when logging or running tasks from only the first instance.\n\n### .services [Array]\n\nServices bound to the app instance.\n\n#### Usage Example\n\n**Get the first service bound to the app:**\n\n    var creds = appfog.services[0].credentials\n\n### .application [Hash]\n\nParsed from process.env.VCAP_APPLICATION\n\n### .vcapServices [Hash]\n\nParsed from process.env.VCAP_SERVICES\n\n## Methods\n\n### .getService(name, overrideCreds) [Hash]\n\nReturns the vcap service info for a specified service. Returns null if  no override credentials are provide or the service is not found.\n\n**name** - Name string or regex used to find the service.\n\n**overrideCreds** - If provided the method returns automatically with the overrides without looking for the service.\n\n#### Usage Examples\n\n**Get service by name or exit if not found:**\n\n    var service = appfog.getService('mysql-db-name') || process.exit 1\n    var creds = service.credentials\n\n    var client = mysql.createConnection({\n       host: creds.hostname || 'localhost',\n       user: creds.username,\n       password: creds.password,\n       database: creds.name,\n       port: creds.port || 3306\n    });\n\n**Override with a local development database:**\n\nSet a local environment variable with the override credentials:\n\n     export DEV_DATABASE='{ \"username\": \"root\", \"name\": \"dev-db-name\" }'\n\nThen in code:\n\n     var service = appfog.getService('mysql-db-name', process.env.DEV_DATABASE);\n",
  "readmeFilename": "README.md",
  "_id": "appfog-env@0.0.1",
  "_from": "appfog-env"
}
